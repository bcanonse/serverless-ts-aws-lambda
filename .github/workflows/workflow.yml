name: Deploy Dev

on:
  pull_request:
    branches: [main]

jobs:
  formatter-code:
    runs-on: ubuntu-latest
    name: Formatter/Lint
    steps:
      - uses: actions/checkout@v2

      - name: NPM - Install dependencies
        if: steps.cached-npm-dependencies.outputs.cache-hit != 'true'
        run: 'npm install'

      - name: Run Tests
        run: |
          npm run precommit

  testing-changes:
    runs-on: ubuntu-latest
    name: Build/Test
    steps:
      - uses: actions/checkout@v2

      - name: NPM - Install dependencies
        if: steps.cached-npm-dependencies.outputs.cache-hit != 'true'
        run: 'npm install'

      - name: Run Tests
        run: |
          npm run test

  deploy-env:
    name: Deploy Lambda
    runs-on: ubuntu-latest
    needs: testing-changes
    steps:
      - uses: actions/checkout@v2.0.0

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: NPM - Load cached venv
        id: cached-npm-dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      #- if: ${{ steps.cached-npm-dependencies.outputs.cache-hit != 'true' }}
      - name: NPM - Install dependencies
        continue-on-error: true
        run: 'npm install'

      - name: Deploy using sls
        run: 'npm run deploy:dev'
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
